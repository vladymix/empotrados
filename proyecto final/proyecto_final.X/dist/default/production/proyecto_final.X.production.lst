

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 26 18:04:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F886 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0006                     _PORTB	set	6
   212  0018                     _RCSTAbits	set	24
   213  001F                     _ADCON0bits	set	31
   214  001D                     _CCP2CONbits	set	29
   215  0012                     _T2CONbits	set	18
   216  000C                     _PIR1bits	set	12
   217  001B                     _CCPR2L	set	27
   218  0001                     _TMR0	set	1
   219  000B                     _INTCONbits	set	11
   220  009E                     _ADRESL	set	158
   221  008C                     _PIE1bits	set	140
   222  0099                     _SPBRG	set	153
   223  009A                     _SPBRGH	set	154
   224  0098                     _TXSTAbits	set	152
   225  009F                     _ADCON1bits	set	159
   226  0086                     _TRISB	set	134
   227  0085                     _TRISA	set	133
   228  0092                     _PR2	set	146
   229  0081                     _OPTION_REGbits	set	129
   230  0087                     _TRISCbits	set	135
   231  0187                     _BAUDCTLbits	set	391
   232  0188                     _ANSEL	set	392
   233                           
   234                           	psect	strings
   235  00BC                     __pstrings:
   236  00BC                     stringtab:
   237  00BC                     __stringtab:
   238  00BC                     stringcode:	
   239                           ;	String table - string pointers are 1 byte each
   240                           
   241  00BC                     stringdir:
   242  00BC  3000               	movlw	high stringdir
   243  00BD  008A               	movwf	10
   244  00BE  0804               	movf	4,w
   245  00BF  0A84               	incf	4,f
   246  00C0  0782               	addwf	2,f
   247  00C1                     __stringbase:
   248  00C1  3400               	retlw	0
   249  00C2                     __end_of__stringtab:
   250  00C2                     STR_1:
   251  00C2  3449               	retlw	73	;'I'
   252  00C3  346E               	retlw	110	;'n'
   253  00C4  3469               	retlw	105	;'i'
   254  00C5  3463               	retlw	99	;'c'
   255  00C6  3469               	retlw	105	;'i'
   256  00C7  3461               	retlw	97	;'a'
   257  00C8  346E               	retlw	110	;'n'
   258  00C9  3464               	retlw	100	;'d'
   259  00CA  346F               	retlw	111	;'o'
   260  00CB  3420               	retlw	32	;' '
   261  00CC  3465               	retlw	101	;'e'
   262  00CD  346C               	retlw	108	;'l'
   263  00CE  3420               	retlw	32	;' '
   264  00CF  3453               	retlw	83	;'S'
   265  00D0  3469               	retlw	105	;'i'
   266  00D1  3473               	retlw	115	;'s'
   267  00D2  3474               	retlw	116	;'t'
   268  00D3  3465               	retlw	101	;'e'
   269  00D4  346D               	retlw	109	;'m'
   270  00D5  3461               	retlw	97	;'a'
   271  00D6  342E               	retlw	46	;'.'
   272  00D7  342E               	retlw	46	;'.'
   273  00D8  342E               	retlw	46	;'.'
   274  00D9  3400               	retlw	0
   275                           
   276                           	psect	cinit
   277  000F                     start_initialization:	
   278                           ; #config settings
   279                           
   280  000F                     __initialization:
   281                           
   282                           ; Clear objects allocated to COMMON
   283  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   284  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   285  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   286  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   287  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   288  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   289                           
   290                           ; Clear objects allocated to BANK0
   291  0015  1283               	bcf	3,5	;RP0=0, select bank0
   292  0016  1303               	bcf	3,6	;RP1=0, select bank0
   293  0017  01A3               	clrf	__pbssBANK0& (0+127)
   294  0018  01A4               	clrf	(__pbssBANK0+1)& (0+127)
   295  0019                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  0019                     __end_of__initialization:
   299  0019  0183               	clrf	3
   300  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303  0070                     __pbssCOMMON:
   304  0070                     _inverFlag:
   305  0070                     	ds	2
   306  0072                     _dataADReady:
   307  0072                     	ds	2
   308  0074                     _numInterruptT0:
   309  0074                     	ds	2
   310                           
   311                           	psect	bssBANK0
   312  0023                     __pbssBANK0:
   313  0023                     _dutyCycle:
   314  0023                     	ds	2
   315                           
   316                           	psect	cstackCOMMON
   317  0076                     __pcstackCOMMON:
   318  0076                     ?_putch:
   319  0076                     ?_interruption:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0076                     ??_interruption:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0076                     ?_init_t0:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0076                     ?_init_t2:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0076                     ?_init_PWM1:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0076                     ?_init_CAD:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0076                     ?_init_uart:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0076                     ?_ShowDataToMonitor:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0076                     ?_CheckTempDial:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0076                     ?_printf:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0076                     ?_main:	
   350                           ; 2 bytes @ 0x0
   351                           
   352  0076                     putch@c:	
   353                           ; 2 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0076                     	ds	3
   358  0079                     ??_printf:
   359  0079                     ??_putch:	
   360                           ; 1 bytes @ 0x3
   361                           
   362  0079                     ??_init_t0:	
   363                           ; 1 bytes @ 0x3
   364                           
   365  0079                     ??_init_t2:	
   366                           ; 1 bytes @ 0x3
   367                           
   368  0079                     ??_init_PWM1:	
   369                           ; 1 bytes @ 0x3
   370                           
   371  0079                     ??_init_CAD:	
   372                           ; 1 bytes @ 0x3
   373                           
   374  0079                     ??_init_uart:	
   375                           ; 1 bytes @ 0x3
   376                           
   377  0079                     ??_ShowDataToMonitor:	
   378                           ; 1 bytes @ 0x3
   379                           
   380  0079                     ??_CheckTempDial:	
   381                           ; 1 bytes @ 0x3
   382                           
   383                           
   384                           ; 1 bytes @ 0x3
   385  0079                     	ds	1
   386  007A                     ??_main:
   387                           
   388                           	psect	cstackBANK0
   389  0020                     __pcstackBANK0:	
   390                           ; 1 bytes @ 0x4
   391                           
   392  0020                     printf@ap:
   393                           
   394                           ; 1 bytes @ 0x0
   395  0020                     	ds	1
   396  0021                     printf@f:
   397                           
   398                           ; 1 bytes @ 0x1
   399  0021                     	ds	1
   400  0022                     printf@c:
   401                           
   402                           ; 1 bytes @ 0x2
   403  0022                     	ds	1
   404                           
   405                           	psect	maintext
   406  001D                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 154 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  2  100[None  ] int 
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels required when called: 3
   432 ;; This function calls:
   433 ;;		_CheckTempDial
   434 ;;		_ShowDataToMonitor
   435 ;;		_init_CAD
   436 ;;		_init_PWM1
   437 ;;		_init_t0
   438 ;;		_init_t2
   439 ;;		_init_uart
   440 ;;		_printf
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _main
   448  001D                     _main:
   449  001D                     l902:	
   450                           ;incstack = 0
   451                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   452                           
   453                           
   454                           ;main.c: 157: PIE1bits.ADIE = 1;
   455  001D  1683               	bsf	3,5	;RP0=1, select bank1
   456  001E  1303               	bcf	3,6	;RP1=0, select bank1
   457  001F  170C               	bsf	12,6	;volatile
   458                           
   459                           ;main.c: 158: INTCONbits.PEIE = 0;
   460  0020  130B               	bcf	11,6	;volatile
   461                           
   462                           ;main.c: 159: INTCONbits.GIE = 1;
   463  0021  178B               	bsf	11,7	;volatile
   464  0022                     l904:
   465                           
   466                           ;main.c: 162: init_t0();
   467  0022  120A  118A  2117  120A  118A  	fcall	_init_t0
   468                           
   469                           ;main.c: 163: init_t2();
   470  0027  120A  118A  211F  120A  118A  	fcall	_init_t2
   471                           
   472                           ;main.c: 164: init_uart();
   473  002C  120A  118A  20F2  120A  118A  	fcall	_init_uart
   474                           
   475                           ;main.c: 165: init_CAD();
   476  0031  120A  118A  20DA  120A  118A  	fcall	_init_CAD
   477                           
   478                           ;main.c: 166: init_PWM1();
   479  0036  120A  118A  2109  120A  118A  	fcall	_init_PWM1
   480  003B                     l906:
   481                           
   482                           ;main.c: 169: printf("Iniciando el Sistema...");
   483  003B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   484  003C  120A  118A  2099  120A  118A  	fcall	_printf
   485  0041                     l908:
   486                           
   487                           ;main.c: 172: {;main.c: 173: ShowDataToMonitor();
   488  0041  120A  118A  2127  120A  118A  	fcall	_ShowDataToMonitor
   489  0046                     l910:
   490                           
   491                           ;main.c: 174: CheckTempDial();
   492  0046  120A  118A  2128  120A  118A  	fcall	_CheckTempDial
   493                           
   494                           ;main.c: 176: while (dataADReady)
   495  004B  2854               	goto	l916
   496  004C                     l912:
   497                           
   498                           ;main.c: 177: {;main.c: 178: PORTB = ADRESL;
   499  004C  1683               	bsf	3,5	;RP0=1, select bank1
   500  004D  1303               	bcf	3,6	;RP1=0, select bank1
   501  004E  081E               	movf	30,w	;volatile
   502  004F  1283               	bcf	3,5	;RP0=0, select bank0
   503  0050  1303               	bcf	3,6	;RP1=0, select bank0
   504  0051  0086               	movwf	6	;volatile
   505  0052                     l914:
   506                           
   507                           ;main.c: 179: dataADReady = 0;
   508  0052  01F2               	clrf	_dataADReady
   509  0053  01F3               	clrf	_dataADReady+1
   510  0054                     l916:
   511  0054  0872               	movf	_dataADReady,w
   512  0055  0473               	iorwf	_dataADReady+1,w
   513  0056  1D03               	btfss	3,2
   514  0057  2859               	goto	u211
   515  0058  285A               	goto	u210
   516  0059                     u211:
   517  0059  284C               	goto	l912
   518  005A                     u210:
   519  005A  2841               	goto	l908
   520  005B  120A  118A  280C   	ljmp	start
   521  005E                     __end_of_main:
   522                           
   523                           	psect	text1
   524  0099                     __ptext1:	
   525 ;; *************** function _printf *****************
   526 ;; Defined at:
   527 ;;		line 477 in file "Y:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;  f               1    wreg     PTR const unsigned char 
   530 ;;		 -> STR_1(24), 
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  f               1    1[BANK0 ] PTR const unsigned char 
   533 ;;		 -> STR_1(24), 
   534 ;;  tmpval          4    0        struct .
   535 ;;  cp              2    0        PTR const unsigned char 
   536 ;;  len             2    0        unsigned int 
   537 ;;  val             2    0        unsigned int 
   538 ;;  c               1    2[BANK0 ] unsigned char 
   539 ;;  ap              1    0[BANK0 ] PTR void [1]
   540 ;;		 -> ?_printf(2), 
   541 ;;  flag            1    0        unsigned char 
   542 ;;  prec            1    0        char 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  2   42[None  ] int 
   545 ;; Registers used:
   546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       3       0       0       0
   554 ;;      Temps:          1       0       0       0       0
   555 ;;      Totals:         1       3       0       0       0
   556 ;;Total ram usage:        4 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; Hardware stack levels required when called: 2
   559 ;; This function calls:
   560 ;;		_putch
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _printf
   568  0099                     _printf:
   569                           
   570                           ;incstack = 0
   571                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   572                           ;printf@f stored from wreg
   573  0099  1283               	bcf	3,5	;RP0=0, select bank0
   574  009A  1303               	bcf	3,6	;RP1=0, select bank0
   575  009B  00A1               	movwf	printf@f
   576  009C                     l896:
   577                           
   578                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
   579  009C  3076               	movlw	(low (?_printf| 0))& (0+255)
   580  009D  00F9               	movwf	??_printf
   581  009E  0879               	movf	??_printf,w
   582  009F  00A0               	movwf	printf@ap
   583                           
   584                           ;doprnt.c: 553: while((c = *f++)) {
   585  00A0  28A7               	goto	l900
   586  00A1                     l898:
   587                           
   588                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
   589  00A1  0822               	movf	printf@c,w
   590  00A2  120A  118A  2126  120A  118A  	fcall	_putch
   591  00A7                     l900:	
   592                           ;doprnt.c: 559: continue;
   593                           
   594  00A7  3001               	movlw	1
   595  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   596  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   597  00AA  07A1               	addwf	printf@f,f
   598  00AB  30FF               	movlw	-1
   599  00AC  0721               	addwf	printf@f,w
   600  00AD  0084               	movwf	4
   601  00AE  120A  118A  20BC  120A  118A  	fcall	stringdir
   602  00B3  00F9               	movwf	??_printf
   603  00B4  0879               	movf	??_printf,w
   604  00B5  00A2               	movwf	printf@c
   605  00B6  0822               	movf	printf@c,w
   606  00B7  1D03               	btfss	3,2
   607  00B8  28BA               	goto	u201
   608  00B9  28BB               	goto	u200
   609  00BA                     u201:
   610  00BA  28A1               	goto	l898
   611  00BB                     u200:
   612  00BB                     l199:
   613  00BB  0008               	return
   614  00BC                     __end_of_printf:
   615                           
   616                           	psect	text2
   617  0126                     __ptext2:	
   618 ;; *************** function _putch *****************
   619 ;; Defined at:
   620 ;;		line 7 in file "Y:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\putch.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  c               1    wreg     unsigned char 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  c               1    0[COMMON] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_printf
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _putch
   650  0126                     _putch:
   651  0126                     l654:	
   652                           ;incstack = 0
   653                           ; Regs used in _putch: [wreg]
   654                           
   655  0126  0008               	return
   656  0127                     __end_of_putch:
   657                           
   658                           	psect	text3
   659  00F2                     __ptext3:	
   660 ;; *************** function _init_uart *****************
   661 ;; Defined at:
   662 ;;		line 106 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; Hardware stack levels required when called: 1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _init_uart
   692  00F2                     _init_uart:
   693  00F2                     l752:	
   694                           ;incstack = 0
   695                           ; Regs used in _init_uart: [wreg+status,2]
   696                           
   697                           
   698                           ;main.c: 109: TXSTAbits.BRGH = 0;
   699  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   700  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   701  00F4  1118               	bcf	24,2	;volatile
   702                           
   703                           ;main.c: 110: BAUDCTLbits.BRG16 = 0 ;
   704  00F5  1683               	bsf	3,5	;RP0=1, select bank3
   705  00F6  1703               	bsf	3,6	;RP1=1, select bank3
   706  00F7  1187               	bcf	7,3	;volatile
   707  00F8                     l754:
   708                           
   709                           ;main.c: 113: SPBRGH = 0;
   710  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   711  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   712  00FA  019A               	clrf	26	;volatile
   713  00FB                     l756:
   714                           
   715                           ;main.c: 114: SPBRG = 32;
   716  00FB  3020               	movlw	32
   717  00FC  0099               	movwf	25	;volatile
   718  00FD                     l758:
   719                           
   720                           ;main.c: 117: TRISCbits.TRISC6 = 1;
   721  00FD  1707               	bsf	7,6	;volatile
   722  00FE                     l760:
   723                           
   724                           ;main.c: 118: TRISCbits.TRISC7 = 0;
   725  00FE  1387               	bcf	7,7	;volatile
   726  00FF                     l762:
   727                           
   728                           ;main.c: 120: TXSTAbits.SYNC = 0;
   729  00FF  1218               	bcf	24,4	;volatile
   730  0100                     l764:
   731                           
   732                           ;main.c: 121: TXSTAbits.TX9 = 0;
   733  0100  1318               	bcf	24,6	;volatile
   734  0101                     l766:
   735                           
   736                           ;main.c: 124: PIE1bits.TXIE = 0;
   737  0101  120C               	bcf	12,4	;volatile
   738  0102                     l768:
   739                           
   740                           ;main.c: 127: RCSTAbits.SPEN = 1;
   741  0102  1283               	bcf	3,5	;RP0=0, select bank0
   742  0103  1303               	bcf	3,6	;RP1=0, select bank0
   743  0104  1798               	bsf	24,7	;volatile
   744  0105                     l770:
   745                           
   746                           ;main.c: 129: TXSTAbits.TXEN = 1;
   747  0105  1683               	bsf	3,5	;RP0=1, select bank1
   748  0106  1303               	bcf	3,6	;RP1=0, select bank1
   749  0107  1698               	bsf	24,5	;volatile
   750  0108                     l84:
   751  0108  0008               	return
   752  0109                     __end_of_init_uart:
   753                           
   754                           	psect	text4
   755  011F                     __ptext4:	
   756 ;; *************** function _init_t2 *****************
   757 ;; Defined at:
   758 ;;		line 67 in file "main.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2, status,0
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; Hardware stack levels required when called: 1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _init_t2
   788  011F                     _init_t2:
   789  011F                     l720:	
   790                           ;incstack = 0
   791                           ; Regs used in _init_t2: [wreg+status,2+status,0]
   792                           
   793                           
   794                           ;main.c: 69: PIR1bits.TMR2IF = 0;
   795  011F  1283               	bcf	3,5	;RP0=0, select bank0
   796  0120  1303               	bcf	3,6	;RP1=0, select bank0
   797  0121  108C               	bcf	12,1	;volatile
   798  0122                     l722:
   799                           
   800                           ;main.c: 70: T2CONbits.T2CKPS = 0b00;
   801  0122  30FC               	movlw	-4
   802  0123  0592               	andwf	18,f	;volatile
   803  0124                     l724:
   804                           
   805                           ;main.c: 72: T2CONbits.TMR2ON = 1;
   806  0124  1512               	bsf	18,2	;volatile
   807  0125                     l72:
   808  0125  0008               	return
   809  0126                     __end_of_init_t2:
   810                           
   811                           	psect	text5
   812  0117                     __ptext5:	
   813 ;; *************** function _init_t0 *****************
   814 ;; Defined at:
   815 ;;		line 59 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         0       0       0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _init_t0
   845  0117                     _init_t0:
   846  0117                     l712:	
   847                           ;incstack = 0
   848                           ; Regs used in _init_t0: [wreg+status,2+status,0]
   849                           
   850                           
   851                           ;main.c: 61: OPTION_REGbits.PS = 0b111;
   852  0117  3007               	movlw	7
   853  0118  1683               	bsf	3,5	;RP0=1, select bank1
   854  0119  1303               	bcf	3,6	;RP1=0, select bank1
   855  011A  0481               	iorwf	1,f	;volatile
   856  011B                     l714:
   857                           
   858                           ;main.c: 62: OPTION_REGbits.T0CS = 0;
   859  011B  1281               	bcf	1,5	;volatile
   860  011C                     l716:
   861                           
   862                           ;main.c: 63: OPTION_REGbits.PSA = 0;
   863  011C  1181               	bcf	1,3	;volatile
   864  011D                     l718:
   865                           
   866                           ;main.c: 64: INTCONbits.T0IE = 1;
   867  011D  168B               	bsf	11,5	;volatile
   868  011E                     l69:
   869  011E  0008               	return
   870  011F                     __end_of_init_t0:
   871                           
   872                           	psect	text6
   873  0109                     __ptext6:	
   874 ;; *************** function _init_PWM1 *****************
   875 ;; Defined at:
   876 ;;		line 81 in file "main.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0
   893 ;;      Totals:         0       0       0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _init_PWM1
   906  0109                     _init_PWM1:
   907  0109                     l726:	
   908                           ;incstack = 0
   909                           ; Regs used in _init_PWM1: [wreg+status,2+status,0]
   910                           
   911                           
   912                           ;main.c: 83: TRISCbits.TRISC1 = 1;
   913  0109  1683               	bsf	3,5	;RP0=1, select bank1
   914  010A  1303               	bcf	3,6	;RP1=0, select bank1
   915  010B  1487               	bsf	7,1	;volatile
   916  010C                     l728:
   917                           
   918                           ;main.c: 84: PR2 = 165;
   919  010C  30A5               	movlw	165
   920  010D  0092               	movwf	18	;volatile
   921  010E                     l730:
   922                           
   923                           ;main.c: 85: CCP2CONbits.CCP2M = 0b1100;
   924  010E  1283               	bcf	3,5	;RP0=0, select bank0
   925  010F  1303               	bcf	3,6	;RP1=0, select bank0
   926  0110  081D               	movf	29,w	;volatile
   927  0111  39F0               	andlw	-16
   928  0112  380C               	iorlw	12
   929  0113  009D               	movwf	29	;volatile
   930  0114                     l732:
   931                           
   932                           ;main.c: 86: CCP2CONbits.DC2B0 = 0;
   933  0114  121D               	bcf	29,4	;volatile
   934  0115                     l734:
   935                           
   936                           ;main.c: 87: CCP2CONbits.DC2B1 = 0;
   937  0115  129D               	bcf	29,5	;volatile
   938  0116                     l78:
   939  0116  0008               	return
   940  0117                     __end_of_init_PWM1:
   941                           
   942                           	psect	text7
   943  00DA                     __ptext7:	
   944 ;; *************** function _init_CAD *****************
   945 ;; Defined at:
   946 ;;		line 90 in file "main.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0
   963 ;;      Totals:         0       0       0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _init_CAD
   976  00DA                     _init_CAD:
   977  00DA                     l736:	
   978                           ;incstack = 0
   979                           ; Regs used in _init_CAD: [wreg+status,2+status,0]
   980                           
   981                           
   982                           ;main.c: 92: TRISA=1;
   983  00DA  3001               	movlw	1
   984  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   985  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   986  00DD  0085               	movwf	5	;volatile
   987                           
   988                           ;main.c: 93: ANSEL=1;
   989  00DE  3001               	movlw	1
   990  00DF  1683               	bsf	3,5	;RP0=1, select bank3
   991  00E0  1703               	bsf	3,6	;RP1=1, select bank3
   992  00E1  0088               	movwf	8	;volatile
   993  00E2                     l738:
   994                           
   995                           ;main.c: 95: TRISB=0;
   996  00E2  1683               	bsf	3,5	;RP0=1, select bank1
   997  00E3  1303               	bcf	3,6	;RP1=0, select bank1
   998  00E4  0186               	clrf	6	;volatile
   999  00E5                     l740:
  1000                           
  1001                           ;main.c: 97: ADCON1bits.ADFM=1;
  1002  00E5  179F               	bsf	31,7	;volatile
  1003  00E6                     l742:
  1004                           
  1005                           ;main.c: 98: ADCON1bits.VCFG1=0;
  1006  00E6  129F               	bcf	31,5	;volatile
  1007  00E7                     l744:
  1008                           
  1009                           ;main.c: 99: ADCON1bits.VCFG0=0;
  1010  00E7  121F               	bcf	31,4	;volatile
  1011  00E8                     l746:
  1012                           
  1013                           ;main.c: 101: ADCON0bits.ADCS=0b10;
  1014  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1015  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1016  00EA  081F               	movf	31,w	;volatile
  1017  00EB  393F               	andlw	-193
  1018  00EC  3880               	iorlw	128
  1019  00ED  009F               	movwf	31	;volatile
  1020  00EE                     l748:
  1021                           
  1022                           ;main.c: 102: ADCON0bits.CHS=0b0000;
  1023  00EE  30C3               	movlw	-61
  1024  00EF  059F               	andwf	31,f	;volatile
  1025  00F0                     l750:
  1026                           
  1027                           ;main.c: 103: ADCON0bits.ADON=1;
  1028  00F0  141F               	bsf	31,0	;volatile
  1029  00F1                     l81:
  1030  00F1  0008               	return
  1031  00F2                     __end_of_init_CAD:
  1032                           
  1033                           	psect	text8
  1034  0127                     __ptext8:	
  1035 ;; *************** function _ShowDataToMonitor *****************
  1036 ;; Defined at:
  1037 ;;		line 146 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		None
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         0       0       0       0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _ShowDataToMonitor
  1067  0127                     _ShowDataToMonitor:
  1068  0127                     l93:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _ShowDataToMonitor: []
  1071                           
  1072  0127  0008               	return
  1073  0128                     __end_of_ShowDataToMonitor:
  1074                           
  1075                           	psect	text9
  1076  0128                     __ptext9:	
  1077 ;; *************** function _CheckTempDial *****************
  1078 ;; Defined at:
  1079 ;;		line 150 in file "main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		None
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 1
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _CheckTempDial
  1109  0128                     _CheckTempDial:
  1110  0128                     l96:	
  1111                           ;incstack = 0
  1112                           ; Regs used in _CheckTempDial: []
  1113                           
  1114  0128  0008               	return
  1115  0129                     __end_of_CheckTempDial:
  1116                           
  1117                           	psect	text10
  1118  005E                     __ptext10:	
  1119 ;; *************** function _interruption *****************
  1120 ;; Defined at:
  1121 ;;		line 19 in file "main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          3       0       0       0       0
  1138 ;;      Totals:         3       0       0       0       0
  1139 ;;Total ram usage:        3 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		Interrupt level 1
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _interruption
  1150  005E                     _interruption:
  1151  005E                     i1l778:
  1152                           
  1153                           ;main.c: 21: if (INTCONbits.T0IF)
  1154  005E  1D0B               	btfss	11,2	;volatile
  1155  005F  2861               	goto	u2_21
  1156  0060  2862               	goto	u2_20
  1157  0061                     u2_21:
  1158  0061  2886               	goto	i1l798
  1159  0062                     u2_20:
  1160  0062                     i1l780:
  1161                           
  1162                           ;main.c: 22: {;main.c: 23: TMR0 = 165;
  1163  0062  30A5               	movlw	165
  1164  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0065  0081               	movwf	1	;volatile
  1167  0066                     i1l782:
  1168                           
  1169                           ;main.c: 24: if (CCPR2L == 255)
  1170  0066  0A1B               	incf	27,w	;volatile
  1171  0067  1D03               	btfss	3,2
  1172  0068  286A               	goto	u3_21
  1173  0069  286B               	goto	u3_20
  1174  006A                     u3_21:
  1175  006A  2878               	goto	i1l790
  1176  006B                     u3_20:
  1177  006B                     i1l784:
  1178                           
  1179                           ;main.c: 25: {;main.c: 26: if (inverFlag == 0)
  1180  006B  0870               	movf	_inverFlag,w
  1181  006C  0471               	iorwf	_inverFlag+1,w
  1182  006D  1D03               	btfss	3,2
  1183  006E  2870               	goto	u4_21
  1184  006F  2871               	goto	u4_20
  1185  0070                     u4_21:
  1186  0070  2876               	goto	i1l788
  1187  0071                     u4_20:
  1188  0071                     i1l786:
  1189                           
  1190                           ;main.c: 27: {;main.c: 28: inverFlag = 1;
  1191  0071  3001               	movlw	1
  1192  0072  00F0               	movwf	_inverFlag
  1193  0073  3000               	movlw	0
  1194  0074  00F1               	movwf	_inverFlag+1
  1195                           
  1196                           ;main.c: 29: }
  1197  0075  2878               	goto	i1l790
  1198  0076                     i1l788:
  1199                           
  1200                           ;main.c: 30: else;main.c: 31: {;main.c: 32: inverFlag = 0;
  1201  0076  01F0               	clrf	_inverFlag
  1202  0077  01F1               	clrf	_inverFlag+1
  1203  0078                     i1l790:
  1204                           
  1205                           ;main.c: 33: };main.c: 34: };main.c: 36: if (inverFlag == 0)
  1206  0078  0870               	movf	_inverFlag,w
  1207  0079  0471               	iorwf	_inverFlag+1,w
  1208  007A  1D03               	btfss	3,2
  1209  007B  287D               	goto	u5_21
  1210  007C  287E               	goto	u5_20
  1211  007D                     u5_21:
  1212  007D  2883               	goto	i1l794
  1213  007E                     u5_20:
  1214  007E                     i1l792:
  1215                           
  1216                           ;main.c: 37: {;main.c: 38: CCPR2L++;
  1217  007E  3001               	movlw	1
  1218  007F  00F6               	movwf	??_interruption
  1219  0080  0876               	movf	??_interruption,w
  1220  0081  079B               	addwf	27,f	;volatile
  1221                           
  1222                           ;main.c: 39: }
  1223  0082  2885               	goto	i1l796
  1224  0083                     i1l794:
  1225                           
  1226                           ;main.c: 40: else;main.c: 41: {;main.c: 42: CCPR2L--;
  1227  0083  3001               	movlw	1
  1228  0084  029B               	subwf	27,f	;volatile
  1229  0085                     i1l796:
  1230                           
  1231                           ;main.c: 43: };main.c: 45: INTCONbits.T0IF = 0;
  1232  0085  110B               	bcf	11,2	;volatile
  1233  0086                     i1l798:
  1234                           
  1235                           ;main.c: 46: };main.c: 50: if (PIR1bits.TMR2IF)
  1236  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0088  1C8C               	btfss	12,1	;volatile
  1239  0089  288B               	goto	u6_21
  1240  008A  288C               	goto	u6_20
  1241  008B                     u6_21:
  1242  008B  2892               	goto	i1l66
  1243  008C                     u6_20:
  1244  008C                     i1l800:
  1245                           
  1246                           ;main.c: 51: {;main.c: 53: TRISCbits.TRISC1 = 0;
  1247  008C  1683               	bsf	3,5	;RP0=1, select bank1
  1248  008D  1303               	bcf	3,6	;RP1=0, select bank1
  1249  008E  1087               	bcf	7,1	;volatile
  1250                           
  1251                           ;main.c: 54: PIR1bits.TMR2IF = 0;
  1252  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0091  108C               	bcf	12,1	;volatile
  1255  0092                     i1l66:
  1256  0092  0878               	movf	??_interruption+2,w
  1257  0093  008A               	movwf	10
  1258  0094  0E77               	swapf	??_interruption+1,w
  1259  0095  0083               	movwf	3
  1260  0096  0EFE               	swapf	btemp,f
  1261  0097  0E7E               	swapf	btemp,w
  1262  0098  0009               	retfie
  1263  0099                     __end_of_interruption:
  1264  007E                     btemp	set	126	;btemp
  1265  007E                     wtemp0	set	126
  1266                           
  1267                           	psect	intentry
  1268  0004                     __pintentry:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _interruption: [wreg+status,2+status,0]
  1271                           
  1272  0004                     interrupt_function:
  1273  007E                     saved_w	set	btemp
  1274  0004  00FE               	movwf	btemp
  1275  0005  0E03               	swapf	3,w
  1276  0006  00F7               	movwf	??_interruption+1
  1277  0007  080A               	movf	10,w
  1278  0008  00F8               	movwf	??_interruption+2
  1279  0009  120A  118A  285E   	ljmp	_interruption
  1280                           
  1281                           	psect	config
  1282                           
  1283                           ;Config register CONFIG1 @ 0x2007
  1284                           ;	Oscillator Selection bits
  1285                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1286                           ;	Watchdog Timer Enable bit
  1287                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1288                           ;	Power-up Timer Enable bit
  1289                           ;	PWRTE = ON, PWRT enabled
  1290                           ;	RE3/MCLR pin function select bit
  1291                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1292                           ;	Code Protection bit
  1293                           ;	CP = OFF, Program memory code protection is disabled
  1294                           ;	Data Code Protection bit
  1295                           ;	CPD = OFF, Data memory code protection is disabled
  1296                           ;	Brown Out Reset Selection bits
  1297                           ;	BOREN = OFF, BOR disabled
  1298                           ;	Internal External Switchover bit
  1299                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1300                           ;	Fail-Safe Clock Monitor Enabled bit
  1301                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1302                           ;	Low Voltage Programming Enable bit
  1303                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1304                           ;	In-Circuit Debugger Mode bit
  1305                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  1306  2007                     	org	8199
  1307  2007  20E2               	dw	8418
  1308                           
  1309                           ;Config register CONFIG2 @ 0x2008
  1310                           ;	Brown-out Reset Selection bit
  1311                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  1312                           ;	Flash Program Memory Self Write Enable bits
  1313                           ;	WRT = OFF, Write protection off
  1314  2008                     	org	8200
  1315  2008  3EFF               	dw	16127

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      3       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf

Critical Paths under _interruption in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruption in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruption in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruption in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     104
                      _CheckTempDial
                  _ShowDataToMonitor
                           _init_CAD
                          _init_PWM1
                            _init_t0
                            _init_t2
                          _init_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    16      0     104
                                              3 COMMON     1     1      0
                                              0 BANK0      3     3      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_t2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_t0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_CAD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowDataToMonitor                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckTempDial                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interruption                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckTempDial
   _ShowDataToMonitor
   _init_CAD
   _init_PWM1
   _init_t0
   _init_t2
   _init_uart
   _printf
     _putch

 _interruption (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 26 18:04:30 2021

                         pc 0002                          l72 0125                          l81 00F1  
                        l84 0108                          l93 0127                          l69 011E  
                        l78 0116                          l96 0128                          fsr 0004  
                       l199 00BB                         l712 0117                         l720 011F  
                       l730 010E                         l714 011B                         l722 0122  
                       l740 00E5                         l732 0114                         l716 011C  
                       l724 0124                         l900 00A7                         l750 00F0  
                       l742 00E6                         l734 0115                         l726 0109  
                       l718 011D                         l654 0126                         l910 0046  
                       l902 001D                         l744 00E7                         l736 00DA  
                       l728 010C                         l760 00FE                         l752 00F2  
                       l912 004C                         l904 0022                         l746 00E8  
                       l738 00E2                         l770 0105                         l762 00FF  
                       l754 00F8                         l914 0052                         l906 003B  
                       l748 00EE                         l764 0100                         l756 00FB  
                       l916 0054                         l908 0041                         l766 0101  
                       l758 00FD                         l768 0102                         l896 009C  
                       l898 00A1                         u200 00BB                         u201 00BA  
                       u210 005A                         u211 0059                         _PR2 0092  
                       fsr0 0004                        STR_1 00C2                        i1l66 0092  
                      _TMR0 0001                        u2_20 0062                        u2_21 0061  
                      u3_20 006B                        u3_21 006A                        u4_20 0071  
                      u4_21 0070                        u5_20 007E                        u5_21 007D  
                      u6_20 008C                        u6_21 008B                        _main 001D  
                      btemp 007E                        start 000C                       ?_main 0076  
                     _ANSEL 0188                       i1l800 008C                       i1l780 0062  
                     i1l790 0078                       i1l782 0066                       i1l792 007E  
                     i1l784 006B                       i1l794 0083                       i1l786 0071  
                     i1l778 005E                       i1l796 0085                       i1l788 0076  
                     i1l798 0086                       _SPBRG 0099                       _PORTB 0006  
                     _TRISA 0085                       _TRISB 0086             __end_of_init_t0 011F  
           __end_of_init_t2 0126                       _putch 0126                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 000F  
              __end_of_main 005E                      ??_main 007A                      _ADRESL 009E  
                    _CCPR2L 001B                      ?_putch 0076                      _SPBRGH 009A  
          __end_of_init_CAD 00F2                      _printf 0099      __size_of_CheckTempDial 0001  
                 ??_init_t0 0079                   ??_init_t2 0079                      saved_w 007E  
                    putch@c 0076     __end_of__initialization 0019              __pcstackCOMMON 0076  
             ?_interruption 0076               __end_of_putch 0127              _OPTION_REGbits 0081  
                   ??_putch 0079                  __pbssBANK0 0023               _CheckTempDial 0128  
        __size_of_init_PWM1 000E          __size_of_init_uart 0017                  __pmaintext 001D  
            ??_interruption 0076                  __pintentry 0004              _numInterruptT0 0074  
                   ?_printf 0076                  __stringtab 00BC              ?_CheckTempDial 0076  
                 ?_init_CAD 0076                     __ptext1 0099                     __ptext2 0126  
                   __ptext3 00F2                     __ptext4 011F                     __ptext5 0117  
                   __ptext6 0109                     __ptext7 00DA                     __ptext8 0127  
                   __ptext9 0128             __size_of_printf 0023           __end_of_init_PWM1 0117  
                 _T2CONbits 0012                     _init_t0 0117                     _init_t2 011F  
         __end_of_init_uart 0109        end_of_initialization 0019                  ??_init_CAD 0079  
                 _RCSTAbits 0018                     printf@c 0022                     printf@f 0021  
                 _TRISCbits 0087        __end_of_interruption 0099             ??_CheckTempDial 0079  
               _CCP2CONbits 001D                   _TXSTAbits 0098                 _BAUDCTLbits 0187  
            __end_of_printf 00BC         start_initialization 000F                 _dataADReady 0072  
                  ??_printf 0079                 __pbssCOMMON 0070                   ___latbits 0002  
             __pcstackBANK0 0020           __size_of_init_CAD 0018                   __pstrings 00BC  
     __size_of_interruption 003B                    ?_init_t0 0076                    ?_init_t2 0076  
                 _init_PWM1 0109                   _init_uart 00F2                   _dutyCycle 0023  
            __size_of_putch 0001                   _inverFlag 0070           interrupt_function 0004  
                  _PIE1bits 008C                    _PIR1bits 000C           _ShowDataToMonitor 0127  
        ?_ShowDataToMonitor 0076                _interruption 005E                  _ADCON0bits 001F  
               __stringbase 00C1                  _ADCON1bits 009F         ??_ShowDataToMonitor 0079  
                ?_init_PWM1 0076                  ?_init_uart 0076   __end_of_ShowDataToMonitor 0128  
        __end_of__stringtab 00C2            __size_of_init_t0 0008            __size_of_init_t2 0007  
                  __ptext10 005E       __end_of_CheckTempDial 0129                    _init_CAD 00DA  
             __size_of_main 0041                  _INTCONbits 000B                 ??_init_PWM1 0079  
               ??_init_uart 0079                    intlevel1 0000  __size_of_ShowDataToMonitor 0001  
                 stringcode 00BC                    printf@ap 0020                    stringdir 00BC  
                  stringtab 00BC  
